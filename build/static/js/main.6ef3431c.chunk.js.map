{"version":3,"sources":["resources/happyd20.svg","resources/d20icon.svg","styles.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["createStyles","theme","App","textAlign","backgroundColor","pallete","gray","c10","fontFamily","AppHeader","border","boxSizing","boxShadow","position","width","padding","height","AppLogo","float","display","textDecorationLine","LinkGithub","color","yellow","c80","fontWeight","letterSpacing","margin","lineHeight","AppLogoName","marginBlockStart","marginBlockEnd","marginLeft","AppBody","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","minHeight","paddingTop","c100","MainText","TextCard","fontSize","Card","c20","marginTop","minWidth","Hint","c50","classes","useStyles","className","href","src","logo","alt","target","kind","size","style","icon","paddingRight","hSpacing","justifyContent","paddingBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ef3431c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/happyd20.e9905fc2.svg\";","export default __webpack_public_path__ + \"static/media/d20icon.5a3bc770.svg\";","import { Theme, useTheme } from \"bold-ui\";\nimport { gray, yellow, turquoise } from \"bold-ui/lib/styles/colors\";\nimport { CSSProperties } from \"react\";\n\nexport const createStyles = (theme: Theme) => ({\n\n    App: {\n      textAlign: 'center',\n      backgroundColor: theme.pallete.gray.c10,\n      fontFamily: \"'Open Sans', sans-serif\" \n    } as CSSProperties,\n\n    AppHeader: {\n      backgroundColor: theme.pallete.gray.c10,\n      border: '0 0 0 1px solid #24252E',\n      boxSizing: 'border-box',\n      boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.5)',\n      position: 'fixed',\n      width: '100%',\n      padding: '2.5rem',\n      height: '7rem',\n      '@media (max-width: 800px)': {\n        height: '3rem'    \n      },\n    } as CSSProperties,\n\n    AppLogo: {\n      float: 'left',\n      display: '-webkit-box',\n      textDecorationLine: 'none'\n      } as CSSProperties,\n\n    LinkGithub: {\n      color: yellow.c80,\n      fontWeight: 800,\n      letterSpacing: '0.05rem',\n      float: 'right',\n      margin: 0,\n      lineHeight: '2rem'\n    } as CSSProperties,\n\n    AppLogoName: {\n      marginBlockStart: 0,\n      marginBlockEnd: 0,\n      letterSpacing: '0.1rem',\n      marginLeft: '1rem',\n      color: yellow.c80\n      } as CSSProperties,\n\n    AppBody: {\n      backgroundImage: 'url(/Backgroundirado.svg)',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'bottom',\n      backgroundSize: '100%',\n      minHeight: '100vh',\n      paddingTop: '11rem',\n      color: gray.c100\n    } as CSSProperties,\n\n    MainText: {\n      lineHeight: '2.25rem',\n    } as CSSProperties,\n\n    TextCard: {\n      color: yellow.c80,\n      fontWeight: 700,\n      letterSpacing: '0.125rem',\n      fontSize: '0.875rem',\n    } as CSSProperties,\n\n    Card: {\n      backgroundColor: gray.c20,\n      marginTop: '1rem',\n      padding: '1rem',\n      minWidth: '18rem',\n    } as CSSProperties,\n\n    Hint: {\n      color: gray.c50,\n      letterSpacing: '0.05rem',\n      fontWeight: 400,\n      fontSize: '0.875rem',\n    }\n\n  })","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Button, Text, Paper, HFlow, colors, useStyles} from 'bold-ui'\nimport './App.css';\nimport logo from './resources/happyd20.svg';\nimport icon from './resources/d20icon.svg';\nimport {createStyles} from './styles' ;\n\nfunction App() {\n  const { classes } = useStyles(createStyles);\n\n  return (\n    <div className={classes.App}>\n      <header className={classes.AppHeader}> \n         <a className={classes.AppLogo} href=\".\">\n            <img src={logo} alt=\"A flat style d20 with a smile face\"/>\n            <h1 className={classes.AppLogoName}>CharGenerator</h1>\n          </a>\n          <a className={classes.LinkGithub} href=\"https://github.com/laiseing/character-generator\" target=\"blank\">Github</a>\n      </header>\n\n      <body className={classes.AppBody}>\n        <h2 className={classes.MainText}>\n            Want to create an awesome character?<br/>Well, you can certainly try.\n        </h2>\n\n        <Button kind='primary' size='large' style={{minWidth: '15rem'}}>   \n        <img src={icon} style={{paddingRight: '0.5rem'}}/> \n          <Text color='inherit'>Roll</Text>\n        </Button>\n\n\n        <HFlow\n  hSpacing={1}\n  justifyContent={'center'}\n  style={{paddingTop: '5rem'}}>\n        \n        <div className={classes.Card} style= {{boxShadow: '0rem 1rem 1.5rem rgba(0, 0, 0, 0.14), 0rem 0.375rem 1.875rem rgba(0, 0, 0, 0.12), 0rem 0.5rem 0.625rem rgba(0, 0, 0, 0.2)',}}>\n          <Text className={classes.TextCard}>CLASSES</Text>\n        </div>\n\n        <div className={classes.Card} style= {{boxShadow: '0rem 1rem 1.5rem rgba(0, 0, 0, 0.14), 0rem 0.375rem 1.875rem rgba(0, 0, 0, 0.12), 0rem 0.5rem 0.625rem rgba(0, 0, 0, 0.2)',}}>\n          <Text className={classes.TextCard}>BACKGROUNDS</Text>\n        </div>\n\n        <div className={classes.Card} style= {{boxShadow: '0rem 1rem 1.5rem rgba(0, 0, 0, 0.14), 0rem 0.375rem 1.875rem rgba(0, 0, 0, 0.12), 0rem 0.5rem 0.625rem rgba(0, 0, 0, 0.2)',}}>\n          <Text className={classes.TextCard}>FLAWS & SECRETS</Text>\n        </div>\n\n</HFlow>\n\n<HFlow\n  hSpacing={1}\n  justifyContent={'center'}\n  style={{paddingBottom: '2rem'}}>\n        \n        <div className={classes.Card} style= {{boxShadow: '0rem 1rem 1.5rem rgba(0, 0, 0, 0.14), 0rem 0.375rem 1.875rem rgba(0, 0, 0, 0.12), 0rem 0.5rem 0.625rem rgba(0, 0, 0, 0.2)',}}>\n          <Text className={classes.TextCard}>RACES</Text>\n        </div>\n\n        <div className={classes.Card} style= {{boxShadow: '0rem 1rem 1.5rem rgba(0, 0, 0, 0.14), 0rem 0.375rem 1.875rem rgba(0, 0, 0, 0.12), 0rem 0.5rem 0.625rem rgba(0, 0, 0, 0.2)',}}>\n          <Text className={classes.TextCard}>PERSONALITIES</Text>\n        </div>\n\n</HFlow>\n<h5 className={classes.Hint}>CLICK OR PRESS SPACEBAR TO ROLL</h5>\n      </body>   \n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}